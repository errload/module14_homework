/*
    Создать Promise, в котором c задержкой в три секунды сгенерировать 
    случайное целое число от 1 до 100. Для создания задержки использовать setTimeout. 
    Если сгенерированное число четное — Promise выполнится успешно (resolve), 
    если нечетное — выполнится с ошибкой (reject). После разрешения Promise 
    обработать результат его выполнения и вывести сообщение в консоль:
        - «Завершено успешно. Сгенерированное число — number», если Promise завершился успешно. 
        Вместо number подставить сгенерированное число
        - «Завершено с ошибкой. Сгенерированное число — number», если Promise завершился с ошибкой. 
        Вместо number подставить сгенерированное число
*/

// генерация случайного число от 1 до 100
let randomNumber = Math.ceil(Math.random() * 100);

// создаем promise
const mPromise = new Promise((resolve, reject) => {
    // если делится на 2 без остатка от деления, число четное
    if (randomNumber % 2 === 0) {
        // возвращаем результат с задержкой в 3сек
        setTimeout(() => {
            resolve(`Завершено успешно. Сгенерированное число — ${randomNumber}`);
        }, 3000);
    // иначе нечетное
    } else {
        // возвращаем результат с задержкой в 3сек
        setTimeout(() => {
            reject(`Завершено с ошибкой. Сгенерированное число — ${randomNumber}`);
        }, 3000);
    }
});

mPromise
    // выводим результат в случае успеха
    .then((result) => {
        console.group('Success');
        console.log(result);
        console.groupEnd();
    })
    // выводим результат в случае неудачи
    .catch((error) => {
        console.group('Error');
        console.log(error);
        console.groupEnd();
    });
